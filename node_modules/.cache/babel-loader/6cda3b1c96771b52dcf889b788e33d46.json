{"ast":null,"code":"var _jsxFileName = \"/var/REACT/react_practice/react_learning/src/components/NewExpense/NewExpense.js\",\n    _s = $RefreshSig$();\n\nimport './NewExpense.css';\nimport ExpenseForm from './ExpenseForm';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewExpense = props => {\n  _s();\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const saveExpenseDateHandler = enteredExpenseData => {\n    const expenseData = { ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    props.onAddExpense(expenseData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: [!isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startEditingHandler,\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 20\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onSaveExpenseData: saveExpenseDateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }, this);\n};\n\n_s(NewExpense, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n\n_c = NewExpense;\nexport default NewExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"sources":["/var/REACT/react_practice/react_learning/src/components/NewExpense/NewExpense.js"],"names":["ExpenseForm","useState","NewExpense","props","isEditing","setIsEditing","startEditingHandler","saveExpenseDateHandler","enteredExpenseData","expenseData","id","Math","random","toString","onAddExpense"],"mappings":";;;AAAA,OAAO,kBAAP;AACA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;;AACA,QAAMK,mBAAmB,GAAG,MAAM;AAC9BD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD;;AAGA,QAAME,sBAAsB,GAAIC,kBAAD,IAAsB;AACjD,UAAMC,WAAW,GAAG,EAChB,GAAGD,kBADa;AAEhBE,MAAAA,EAAE,EAACC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAFa,KAApB;AAIAV,IAAAA,KAAK,CAACW,YAAN,CAAmBL,WAAnB;AAEH,GAPD;;AAQA,sBAAQ;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,eACP,CAACL,SAAD,iBAAc;AAAQ,MAAA,OAAO,EAAEE,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADP,EAEPF,SAAS,iBACN,QAAC,WAAD;AAAa,MAAA,iBAAiB,EAAEG;AAAhC;AAAA;AAAA;AAAA;AAAA,YAHI;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAOH,CApBD;;GAAML,U;;KAAAA,U;AAsBN,eAAeA,UAAf","sourcesContent":["import './NewExpense.css';\nimport ExpenseForm from './ExpenseForm';\nimport { useState } from 'react';\n\nconst NewExpense = (props)=>{\n    const [isEditing, setIsEditing] = useState(false);\n    const startEditingHandler = () => {\n        setIsEditing(true);\n    }\n    const saveExpenseDateHandler = (enteredExpenseData)=>{\n        const expenseData = {\n            ...enteredExpenseData,\n            id:Math.random().toString()\n        };\n        props.onAddExpense(expenseData);\n\n    }\n    return (<div className=\"new-expense\">\n    {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\n    {isEditing &&\n        <ExpenseForm onSaveExpenseData={saveExpenseDateHandler} />\n    }\n    </div>\n    )\n}\n\nexport default NewExpense;"]},"metadata":{},"sourceType":"module"}